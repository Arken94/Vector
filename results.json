[
  {
    "timestamp": "2016-09-10 00:00:00.210243", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6760== Memcheck, a memory error detector\n==6760== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==6760== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==6760== Command: .../amibrah2/vector/vector_test 18\n==6760== \n==6760== \n==6760== HEAP SUMMARY:\n==6760==     in use at exit: 0 bytes in 0 blocks\n==6760==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==6760== \n==6760== All heap blocks were freed -- no leaks are possible\n==6760== \n==6760== For counts of detected and suppressed errors, rerun with: -v\n==6760== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6790== Memcheck, a memory error detector\n==6790== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==6790== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==6790== Command: ./document_test 3\n==6790== \n==6790== \n==6790== HEAP SUMMARY:\n==6790==     in use at exit: 0 bytes in 0 blocks\n==6790==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==6790== \n==6790== All heap blocks were freed -- no leaks are possible\n==6790== \n==6790== For counts of detected and suppressed errors, rerun with: -v\n==6790== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "revision": "12194", 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\nf080fac5818bbe75c05d100dd0346b40a48d756b  document.c"
  }, 
  {
    "timestamp": "2016-09-11 00:00:00.547325", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==21664== Memcheck, a memory error detector\n==21664== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==21664== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==21664== Command: .../amibrah2/vector/vector_test 18\n==21664== \n==21664== \n==21664== HEAP SUMMARY:\n==21664==     in use at exit: 0 bytes in 0 blocks\n==21664==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==21664== \n==21664== All heap blocks were freed -- no leaks are possible\n==21664== \n==21664== For counts of detected and suppressed errors, rerun with: -v\n==21664== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==21694== Memcheck, a memory error detector\n==21694== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==21694== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==21694== Command: ./document_test 3\n==21694== \n==21694== \n==21694== HEAP SUMMARY:\n==21694==     in use at exit: 0 bytes in 0 blocks\n==21694==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==21694== \n==21694== All heap blocks were freed -- no leaks are possible\n==21694== \n==21694== For counts of detected and suppressed errors, rerun with: -v\n==21694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\n80fd3b430aeef5c31fc81fb79874dbb4508ad2b3  document.c", 
    "revision": "13069"
  }, 
  {
    "timestamp": "2016-09-11 14:35:00.164436", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4037== Memcheck, a memory error detector\n==4037== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4037== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4037== Command: .../amibrah2/vector/vector_test 18\n==4037== \n==4037== \n==4037== HEAP SUMMARY:\n==4037==     in use at exit: 0 bytes in 0 blocks\n==4037==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==4037== \n==4037== All heap blocks were freed -- no leaks are possible\n==4037== \n==4037== For counts of detected and suppressed errors, rerun with: -v\n==4037== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4067== Memcheck, a memory error detector\n==4067== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==4067== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==4067== Command: ./document_test 3\n==4067== \n==4067== \n==4067== HEAP SUMMARY:\n==4067==     in use at exit: 0 bytes in 0 blocks\n==4067==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==4067== \n==4067== All heap blocks were freed -- no leaks are possible\n==4067== \n==4067== For counts of detected and suppressed errors, rerun with: -v\n==4067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "13327", 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\n80fd3b430aeef5c31fc81fb79874dbb4508ad2b3  document.c"
  }, 
  {
    "timestamp": "2016-09-12 00:00:00.275868", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==18407== Memcheck, a memory error detector\n==18407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==18407== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==18407== Command: .../amibrah2/vector/vector_test 18\n==18407== \n==18407== \n==18407== HEAP SUMMARY:\n==18407==     in use at exit: 0 bytes in 0 blocks\n==18407==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==18407== \n==18407== All heap blocks were freed -- no leaks are possible\n==18407== \n==18407== For counts of detected and suppressed errors, rerun with: -v\n==18407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==18437== Memcheck, a memory error detector\n==18437== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==18437== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==18437== Command: ./document_test 3\n==18437== \n==18437== \n==18437== HEAP SUMMARY:\n==18437==     in use at exit: 0 bytes in 0 blocks\n==18437==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==18437== \n==18437== All heap blocks were freed -- no leaks are possible\n==18437== \n==18437== For counts of detected and suppressed errors, rerun with: -v\n==18437== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }
    ], 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\n80fd3b430aeef5c31fc81fb79874dbb4508ad2b3  document.c", 
    "revision": "14320"
  }, 
  {
    "timestamp": "2016-09-13 00:00:00.603862", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==740== Memcheck, a memory error detector\n==740== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==740== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==740== Command: .../amibrah2/vector/vector_test 18\n==740== \n==740== \n==740== HEAP SUMMARY:\n==740==     in use at exit: 0 bytes in 0 blocks\n==740==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==740== \n==740== All heap blocks were freed -- no leaks are possible\n==740== \n==740== For counts of detected and suppressed errors, rerun with: -v\n==740== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==778== Memcheck, a memory error detector\n==778== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==778== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==778== Command: ./document_test 3\n==778== \n==778== \n==778== HEAP SUMMARY:\n==778==     in use at exit: 0 bytes in 0 blocks\n==778==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==778== \n==778== All heap blocks were freed -- no leaks are possible\n==778== \n==778== For counts of detected and suppressed errors, rerun with: -v\n==778== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "16163", 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\n80fd3b430aeef5c31fc81fb79874dbb4508ad2b3  document.c"
  }, 
  {
    "timestamp": "2016-09-14 13:36:49.925013", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13808== Memcheck, a memory error detector\n==13808== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13808== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13808== Command: .../amibrah2/vector/vector_test 18\n==13808== \n==13808== \n==13808== HEAP SUMMARY:\n==13808==     in use at exit: 0 bytes in 0 blocks\n==13808==   total heap usage: 14 allocs, 14 frees, 412 bytes allocated\n==13808== \n==13808== All heap blocks were freed -- no leaks are possible\n==13808== \n==13808== For counts of detected and suppressed errors, rerun with: -v\n==13808== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==13838== Memcheck, a memory error detector\n==13838== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13838== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13838== Command: ./document_test 3\n==13838== \n==13838== \n==13838== HEAP SUMMARY:\n==13838==     in use at exit: 0 bytes in 0 blocks\n==13838==   total heap usage: 31 allocs, 31 frees, 10,808 bytes allocated\n==13838== \n==13838== All heap blocks were freed -- no leaks are possible\n==13838== \n==13838== For counts of detected and suppressed errors, rerun with: -v\n==13838== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "checksum": "989b78d6ca2a86015c7599e675898c9fd67daae4  vector.c\n80fd3b430aeef5c31fc81fb79874dbb4508ad2b3  document.c", 
    "revision": "19328"
  }
]